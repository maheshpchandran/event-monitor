Parameters: 
  UserStreamShards: 
    Type: Number
    Default: 1
    Description: Number of shards for user stream

  UtmStreamShards: 
    Type: Number
    Default: 1
    Description: Number of shards for utm stream

  RedshiftClusterEndpoint:
    Type: String
    Description: The connection string to connect to the redshift cluster 

  KinesisRoleARN:
    Type: String
    Description: Role ARN to attach to kinesis, should have access to s3 bucket and cross account RedShift

  S3BucketName:
    Type: String
    Description: Bucket to be used as an intermediatory

  RedshiftUsername: 
    Type: String
    Description: username for redshift

  RedshiftPassword: 
    Type: String
    Description: Password for redshift    

  RedshiftDatabase: 
    Type: String
    Description: database for redshift


Resources:
    KinesisStream:
        Type: "AWS::Kinesis::Stream"
        Properties:
            Name: "event-stream-user"
            RetentionPeriodHours: 24
            StreamEncryption: 
                EncryptionType: KMS
                KeyId: alias/aws/kinesis
            ShardCount: 
              Ref: UserStreamShards

    KinesisStream2:
        Type: "AWS::Kinesis::Stream"
        Properties:
            Name: "event-stream-utm"
            RetentionPeriodHours: 24
            StreamEncryption: 
                EncryptionType: KMS
                KeyId: alias/aws/kinesis                
            ShardCount: 
              Ref: UtmStreamShards

    KinesisFirehoseDeliveryStream:
        Type: "AWS::KinesisFirehose::DeliveryStream"
        Properties:
            DeliveryStreamName: "event-delivery-stream"
            DeliveryStreamType: "KinesisStreamAsSource"
            KinesisStreamSourceConfiguration: 
                KinesisStreamARN: !GetAtt KinesisStream.Arn
                RoleARN: !Ref KinesisRoleARN 
            RedshiftDestinationConfiguration: 
                CloudWatchLoggingOptions: 
                    Enabled: true
                    LogGroupName: "/aws/kinesisfirehose/event-delivery-stream-28"
                    LogStreamName: "RedshiftDelivery"
                ClusterJDBCURL: !Sub "jdbc:redshift://${RedshiftClusterEndpoint}/${RedshiftDatabase}"
                CopyCommand: 
                    DataTableName: "events"
                    DataTableColumns: "environment,user_account_id,request_timestamp,referrer,website_id,topic,location,request_id,message,cookie_id,user_agent"
                    CopyOptions: "json 'auto' TRUNCATECOLUMNS blanksasnull emptyasnull"
                ProcessingConfiguration: 
                    Enabled: false
                RoleARN: !Ref KinesisRoleARN
                S3Configuration: 
                    BucketARN: !Sub "arn:aws:s3:::${S3BucketName}"
                    BufferingHints: 
                        SizeInMBs: 5
                        IntervalInSeconds: 300
                    CloudWatchLoggingOptions: 
                        Enabled: true
                        LogGroupName: "/aws/kinesisfirehose/event-delivery-stream-28"
                        LogStreamName: "S3Delivery"
                    CompressionFormat: "UNCOMPRESSED"
                    EncryptionConfiguration: 
                        NoEncryptionConfig: "NoEncryption"
                    Prefix: "events"
                    RoleARN: !Ref KinesisRoleARN
                Username: !Ref RedshiftUsername
                Password: !Ref RedshiftPassword


    KinesisFirehoseDeliveryStream2:
        Type: "AWS::KinesisFirehose::DeliveryStream"
        Properties:
            DeliveryStreamName: "event-delivery-stream-utm"
            DeliveryStreamType: "KinesisStreamAsSource"
            KinesisStreamSourceConfiguration: 
                KinesisStreamARN: !GetAtt KinesisStream2.Arn
                RoleARN: !Ref KinesisRoleARN
            RedshiftDestinationConfiguration: 
                CloudWatchLoggingOptions: 
                    Enabled: true
                    LogGroupName: "/aws/kinesisfirehose/event-delivery-stream-utm"
                    LogStreamName: "RedshiftDelivery"
                ClusterJDBCURL: !Sub "jdbc:redshift://${RedshiftClusterEndpoint}/${RedshiftDatabase}"
                CopyCommand: 
                    DataTableName: "utm"
                    DataTableColumns: "request_id, source, medium, campaign, content, term, matchtype, network,ad_id, ad_pos,placement, placement_category, testgroup, device"
                    CopyOptions: "json 'auto' TRUNCATECOLUMNS blanksasnull emptyasnull"
                ProcessingConfiguration: 
                    Enabled: false
                RoleARN: !Ref KinesisRoleARN
                S3Configuration: 
                    BucketARN: !Sub "arn:aws:s3:::${S3BucketName}"
                    BufferingHints:
                        SizeInMBs: 5
                        IntervalInSeconds: 300
                    CloudWatchLoggingOptions: 
                        Enabled: true
                        LogGroupName: "/aws/kinesisfirehose/event-delivery-stream-utm"
                        LogStreamName: "S3Delivery"
                    CompressionFormat: "UNCOMPRESSED"
                    EncryptionConfiguration: 
                        NoEncryptionConfig: "NoEncryption"
                    Prefix: "utm"
                    RoleARN: !Ref KinesisRoleARN
                Username: !Ref RedshiftUsername
                Password: !Ref RedshiftPassword



