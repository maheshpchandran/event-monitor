Parameters: 
  s3bucketLambda: 
    Type: String
    Description: s3 bucket with lamda zip
  s3keyLambda: 
    Type: String
    Description: s3 lambda zip location inside bucket
  RedshiftQuery:
    Type: String
    Description: Init query on redshift cluster
  RedshiftUser:
    Type: String
    Description: redshift cluster User
  RedshiftEndpoint:
    Type: String
    Description: redshift cluster endpoint
  RedshiftPort:
    Type: String
    Description: redshift cluster point
  Redshiftpassword:
    Type: String
    Description: redshift cluster password
  RedshiftDatabase:
    Type: String
    Description: redshift database
  SecurityGroupId:
    Type: String
    Description: SG
  SubnetId1:
    Type: String
    Description: subnet 1
  SubnetId2:
    Type: String
    Description: subnet 2
              

Resources:
    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "Lambda Function to run a query on redshift cluster"
            Environment: 
                Variables: 
                    "REDSHIFT_USER": !Ref RedshiftUser
                    "REDSHIFT_ENDPOINT": !Ref RedshiftEndpoint
                    "REDSHIFT_PORT": !Ref RedshiftPort
                    "REDSHIFT_QUERY": !Ref RedshiftQuery
                    "REDSHIFT_DATABASE": !Ref RedshiftQuery
                    "REDSHIFT_PASSWD": !Ref RedshiftDatabase
            FunctionName: "RunQuery_lambda"
            Handler: "lambda_function.lambda_handler"
            Code: 
                S3Bucket: !Ref s3bucketLambda
                S3Key: !Sub "${s3keyLambda}"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/lambda-role-full"
            Runtime: "python3.7"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            VpcConfig: 
                SubnetIds: 
                  - !Ref SubnetId2
                  - !Ref SubnetId1
                SecurityGroupIds: 
                  - !Ref SecurityGroupId
    Primerinvoke:
      Type: AWS::CloudFormation::CustomResource
      DependsOn: LambdaFunction
      Version: "1.0"
      Properties:
        ServiceToken: !GetAtt LambdaFunction.Arn      
